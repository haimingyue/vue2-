{"version":3,"file":"vue.js","sources":["../src/util.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function'\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val != null\n}","let oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype)\n\n// arrayMethods.__proto__ = Array.prototype 继承\n\nlet methods = [\n    'shift',\n    'unshift',\n    'pop',\n    'push',\n    'splice',\n    'reverse',\n    'sort'\n]\n\n// 改写的用自己的，没有改写的用原来的。\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        // 这里的args是传入的参数列表\n        // 比如arr.push(1,2,3),则 ...args = [1, 2, 3]\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n        console.log('inserted', inserted)\n        if (inserted) {\n            // 如果有新增的值，就继续劫持，这里要观测的是数组的每一项\n            ob.observeArray(inserted)\n        }\n    }\n})\n","import { isObject } from \"../util\"\nimport { arrayMethods } from './array';\n\nclass Observer {\n    constructor(data) {\n        // 给当前的数组添加一个属性，当前的observer的实例\n        // data.__ob__ = this\n        // 这里用__ob__会出现死循环，因为会不停的执行defineReactive\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 不可枚举\n        })\n\n        // 对对象中的所有属性进行劫持\n        if (Array.isArray(data)) {\n            // 切片编程（高阶函数），改写原来的数组\n            // 用户调用时：如果调用的是“劫持”的七个变异方法，就用自己重写的，否则调用原来的。\n            data.__proto__ = arrayMethods\n            // 如果数组里面是对象的话，需要对对象进行监控\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n\n    observeArray(data) {\n        // 遍历data\n        data.forEach(item => {\n            // 对item进行观测\n            // 对数组里面的数组和对象进行监控\n            observe(item)\n        })\n    }\n    walk(data) {\n        Object.keys(data).forEach(key => {\n            // 把对象中的所有的属性定义成响应式的\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\n// vue2为什么性能低？\n// 因为Vue2会对对象进行遍历，将每个属性用defineProperty重新定义（全量劫持）\nfunction defineReactive(data, key, value) {\n    // value 有可能是对象（对象套对象），递归劫持\n    observe(value)\n    Object.defineProperty(data, key, {\n        get() {\n            return value\n        },\n        set(newV) {\n            observe(newV)\n            // 如果用户赋值的是一个新对象，需要将这个对象进行劫持\n            value = newV\n        }\n    })\n}\n\nexport function observe(data) {\n    if (!isObject(data)) {\n        return\n    }\n    if (data.__ob__) {\n        return\n    }\n    console.log('ok', data)\n\n    return new Observer(data)\n}","import { isFunction } from './util';\nimport { observe } from './observe/index';\n/**\n * \n * @param {Vue的实例} vm \n * initState 说明：\n * 对Vue的数据进行初始化\n * Vue的数据来源有：data，computed，watch，props，inject...\n */\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.data) {\n        // 对数据进行处理\n        initData(vm)\n    }\n    // if (opts.computed) {\n    //     // 对数据进行处理\n    //     initComputed()\n    // }\n    // if (opts.watch) {\n    //     // 对数据进行处理\n    //     initWatch()\n    // }\n}\n\nfunction initData(vm) {\n    // 用户设置$开头的属性，Vue内部不会进行代理\n    let data = vm.$options.data\n    // vue2中，会将data中的所有数据，进行数据劫持（Object.defineProperty）\n    // 如果data是函数，取返回值，否则去data本身\n    // 如果是方法的话，我这里希望方法里面的this都指向VM\n    // 通过_data对data 和 vm进行关联\n    data = vm._data = isFunction(data) ? data.call(vm) : data\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n    console.log('data2', data)\n    // 对数据进行观测\n    observe(data)\n}\n\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        }\n    })\n}","import { initState } from \"./state\"\n\n// 表示在vue的基础上做一次混合操作\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        // 这里的this就是当前的Vue实例\n        const vm = this\n        // 给$options赋值\n        vm.$options = options\n        initState(vm)\n    }\n}","import { initMixin } from './init';\n\n/**\n * \n * @param {*} options \n * 用户里面 vm.$options\n */\n\nfunction Vue(options) {\n    //options 使用户传入进来的数据\n    this._init(options);  // 初始化操作\n    // el\n    // data\n}\n\ninitMixin(Vue)\n\nexport default Vue;"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","console","log","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","_data","proxy","source","newValue","initMixin","Vue","_init","options"],"mappings":"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"}