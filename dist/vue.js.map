{"version":3,"file":"vue.js","sources":["../src/util.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generate.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function'\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val != null\n}","let oldArrayPrototype = Array.prototype\nexport let arrayMethods = Object.create(oldArrayPrototype)\n\n// arrayMethods.__proto__ = Array.prototype 继承\n\nlet methods = [\n    'shift',\n    'unshift',\n    'pop',\n    'push',\n    'splice',\n    'reverse',\n    'sort'\n]\n\n// 改写的用自己的，没有改写的用原来的。\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        // 这里的args是传入的参数列表\n        // 比如arr.push(1,2,3),则 ...args = [1, 2, 3]\n        oldArrayPrototype[method].call(this, ...args)\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n        if (inserted) {\n            // 如果有新增的值，就继续劫持，这里要观测的是数组的每一项\n            ob.observeArray(inserted)\n        }\n    }\n})\n","import { isObject } from \"../util\"\nimport { arrayMethods } from './array';\n\nclass Observer {\n    constructor(data) {\n        // 给当前的数组添加一个属性，当前的observer的实例\n        // data.__ob__ = this\n        // 这里用__ob__会出现死循环，因为会不停的执行defineReactive\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 不可枚举\n        })\n\n        // 对对象中的所有属性进行劫持\n        if (Array.isArray(data)) {\n            // 切片编程（高阶函数），改写原来的数组\n            // 用户调用时：如果调用的是“劫持”的七个变异方法，就用自己重写的，否则调用原来的。\n            data.__proto__ = arrayMethods\n            // 如果数组里面是对象的话，需要对对象进行监控\n            this.observeArray(data)\n        } else {\n            this.walk(data)\n        }\n    }\n\n    observeArray(data) {\n        // 遍历data\n        data.forEach(item => {\n            // 对item进行观测\n            // 对数组里面的数组和对象进行监控\n            observe(item)\n        })\n    }\n    walk(data) {\n        Object.keys(data).forEach(key => {\n            // 把对象中的所有的属性定义成响应式的\n            defineReactive(data, key, data[key])\n        })\n    }\n}\n\n// vue2为什么性能低？\n// 因为Vue2会对对象进行遍历，将每个属性用defineProperty重新定义（全量劫持）\nfunction defineReactive(data, key, value) {\n    // value 有可能是对象（对象套对象），递归劫持\n    observe(value)\n    Object.defineProperty(data, key, {\n        get() {\n            return value\n        },\n        set(newV) {\n            observe(newV)\n            // 如果用户赋值的是一个新对象，需要将这个对象进行劫持\n            value = newV\n        }\n    })\n}\n\nexport function observe(data) {\n    if (!isObject(data)) {\n        return\n    }\n    if (data.__ob__) {\n        return\n    }\n\n    return new Observer(data)\n}","import { isFunction } from './util';\nimport { observe } from './observe/index';\n/**\n * \n * @param {Vue的实例} vm \n * initState 说明：\n * 对Vue的数据进行初始化\n * Vue的数据来源有：data，computed，watch，props，inject...\n */\nexport function initState(vm) {\n    const opts = vm.$options\n    if (opts.data) {\n        // 对数据进行处理\n        initData(vm)\n    }\n    // if (opts.computed) {\n    //     // 对数据进行处理\n    //     initComputed()\n    // }\n    // if (opts.watch) {\n    //     // 对数据进行处理\n    //     initWatch()\n    // }\n}\n\nfunction initData(vm) {\n    // 用户设置$开头的属性，Vue内部不会进行代理\n    let data = vm.$options.data\n    // vue2中，会将data中的所有数据，进行数据劫持（Object.defineProperty）\n    // 如果data是函数，取返回值，否则去data本身\n    // 如果是方法的话，我这里希望方法里面的this都指向VM\n    // 通过_data对data 和 vm进行关联\n    data = vm._data = isFunction(data) ? data.call(vm) : data\n    for (let key in data) {\n        proxy(vm, '_data', key)\n    }\n    // 对数据进行观测\n    observe(data)\n}\n\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue\n        }\n    })\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名 \nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签的 \nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/; //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n\n// ast (语法层面的描述 js css html) vdom （dom节点）\n\n// html字符串解析成 对应的脚本来触发 tokens  <div id=\"app\"> {{name}}</div>\n// 将解析后的结果 组装成一个树结构  栈\nfunction createAstElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: 1,\n        children: [],\n        parent: null,\n        attrs\n    }\n}\nlet root = null;\nlet stack = [];\nfunction start(tagName, attributes) {\n    let parent = stack[stack.length - 1];\n    let element = createAstElement(tagName, attributes);\n    if (!root) {\n        root = element;\n    }\n    if (parent) {\n        element.parent = parent;// 当放入栈中时 继续父亲是谁\n        parent.children.push(element)\n    }\n    stack.push(element);\n}\nfunction end(tagName) {\n    let last = stack.pop();\n    if (last.tag !== tagName) {\n        throw new Error('标签有误');\n    }\n}\nfunction chars(text) {\n    text = text.replace(/\\s/g, \"\");\n    let parent = stack[stack.length - 1];\n    if (text) {\n        parent.children.push({\n            type: 3,\n            text\n        })\n    }\n}\n\nexport function parserHTML(html) {\n    function advance(len) {\n        html = html.substring(len);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            let end;\n            // 如果没有遇到标签结尾就不停的解析\n            let attr;\n\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n                advance(attr[0].length)\n            }\n            if (end) {\n                advance(end[0].length);\n            }\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n    while (html) { // 看要解析的内容是否存在，如果存在就不停的解析\n        let textEnd = html.indexOf('<'); // 当前解析的开头  \n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(html); // 解析开始标签\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue;\n            }\n            const endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n                continue;\n            }\n        }\n        let text; // //  </div>\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            chars(text);\n            advance(text.length);\n        }\n    }\n\n    return root;\n}\n\n\n// 看一下用户是否传入了 , 没传入可能传入的是 template, template如果也没有传递\n// 将我们的html =》 词法解析  （开始标签 ， 结束标签，属性，文本）\n// => ast语法树 用来描述html语法的 stack=[]\n\n// codegen  <div>hello</div>  =>   _c('div',{},'hello')  => 让字符串执行\n// 字符串如果转成代码 eval 好性能 会有作用域问题\n\n// 模板引擎 new Function + with 来实现","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            let styleObj = {}\n            attr.value.replace(/([^:;]+):([^:;]+)/g, function () {\n                console.log(arguments[1], arguments[2])\n                styleObj[arguments[1]] = arguments[2]\n            })\n            attr.value = styleObj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(el) {\n    let text = el.text\n    console.log('el', el)\n    if (el.type === 1) { // element: 1 text: 3\n        return generate(el)\n    } else {\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`\n        } else {\n            // 拆分\n            let tokens = []\n            let match;\n            let lastIndex = defaultTagRE.lastIndex = 0;\n            while (match = defaultTagRE.exec(text)) {\n                // 看有没有匹配到\n                let index = match.index // 开始索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                }\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length\n            }\n\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\n            }\n\n            return `_v(${tokens.join('+')})`\n        }\n        // console.log('txext', text)\n\n    }\n}\n\nfunction genChildren(el) {\n    console.log('ellll', el)\n    let children = el.children\n    if (children) {\n        return children.map(c => gen(c)).join(',')\n    }\n}\n\nfunction generate(el) {\n    console.log('---------------', el)\n    let children = genChildren(el)\n    // 遍历🌲，将🌲拼接成字符串\n    let code = `_c('${el.tag}', ${el.attrs.length ? genProps(el.attrs) : 'undefined'\n        })${children ? `,${children}` : ''}`\n    return code\n}\n\nexport { generate };","import { parserHTML } from './parser'\nimport { generate } from './generate'\n\n// html解析成脚本来触发\nexport function compileToFunction(template) {\n    console.log('templatetemplatetemplatetemplate', template)\n    let root = parserHTML(template)\n    console.log('rootrootroot', root)\n    // ast （只能描述语法）=> render => 虚拟Dom (可以扩展属性) => 生成很是Dom\n    // render() {\n    //     return _c('div', { id: 'app', a: 1 }, 'hello')\n    // }\n    let code = generate(root)\n    console.log(code)\n}","import { initState } from \"./state\"\nimport { compileToFunction } from './compiler/index';\n\n// 表示在vue的基础上做一次混合操作\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        // 这里的this就是当前的Vue实例\n        const vm = this\n        // 给$options赋值\n        vm.$options = options\n        initState(vm)\n\n        if (vm.$options.el) {\n            // 将数据挂载到这个模板上\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this\n        const options = vm.$options\n        el = document.querySelector(el)\n        // 1. 把模板变成渲染函数 => 虚拟Dom => vnode => diff 更新虚拟Dom，最后产生真实节点，一次更新\n        if (!options.render) {\n            // 这个render是用户自己写的render\n            let template = options.template\n            if (!template && el) {\n                // 用户没有自己写template，就取el的内容作为模板\n                template = el.outerHTML\n                let render = compileToFunction(template)\n                options.render = render\n            }\n        }\n    }\n}","import { initMixin } from './init';\n\n/**\n * \n * @param {*} options \n * 用户里面 vm.$options\n */\n\nfunction Vue(options) {\n    //options 使用户传入进来的数据\n    this._init(options);  // 初始化操作\n    // el\n    // data\n}\n\ninitMixin(Vue)\n\nexport default Vue;"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","_data","proxy","source","newValue","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tagName","attrs","tag","type","children","parent","root","stack","start","attributes","length","element","push","end","last","pop","Error","chars","text","replace","parserHTML","html","advance","len","substring","parseStartTag","match","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","styleObj","console","log","arguments","JSON","stringify","gen","el","generate","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","c","code","compileToFunction","template","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}